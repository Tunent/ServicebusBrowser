name: Build release

on:
  workflow_dispatch:
    inputs:
      releaseTitle:
        description: "Release title"
        required: true
      tagVersion:
        description: "Tag version"
        required: true

jobs:
  windowsBuild:
    name: Build for Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: NPM Install
        run: "npm install"
      - name: NPM Release
        run: "npm run release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish release as artifect
        uses: actions/upload-artifact@v2
        with:
          name: windows-release
          path: dist
  linuxBuild:
    name: Build for Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: NPM Install
        run: "npm install"
      - name: NPM Release
        run: "npm run release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish release as artifect
        uses: actions/upload-artifact@v2
        with:
          name: linux-release
          path: dist
  macBuild:
    name: Build for Mac
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: NPM Install
        run: "npm install"
      - name: NPM Release
        run: "npm run release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish release as artifect
        uses: actions/upload-artifact@v2
        with:
          name: mac-release
          path: dist

  createRelease:
    name: Create the release
    runs-on: ubuntu-latest
    needs: [windowsBuild, linuxBuild, macBuild]
    steps:
      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
          tag_name: ${{ github.event.inputs.tagVersion }}
          # The name of the release. For example, `Release v1.0.1`
          release_name: ${{ github.event.inputs.releaseTitle }}
          commitish: master
          draft: true
      - name: Download Windows Build
        uses: actions/download-artifact@v2
        with:
          name: windows-release
          path: windows
      - name: Download Mac Build
        uses: actions/download-artifact@v2
        with:
          name: mac-release
          path: mac
      - name: Download Linux Build
        uses: actions/download-artifact@v2
        with:
          name: linux-release
          path: linux
      - name: Display structure of downloaded files
        run: ls -R
      - name: Publish windows build to release
        uses: chaosddp/upload_asset_to_release@v0.1
        with:
          repo: ServicebusBrowser
          owner: mligtenberg
          tag_name: ${{ github.event.inputs.tagVersion }}
          token: ${{ secrets.GITHUB_TOKEN }}
          asset: "dist/*.exe"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Linux build to release
        uses: chaosddp/upload_asset_to_release@v0.1
        with:
          repo: ServicebusBrowser
          owner: mligtenberg
          tag_name: ${{ github.event.inputs.tagVersion }}
          token: ${{ secrets.GITHUB_TOKEN }}
          asset: "dist/*.AppImage"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Mac build to release
        uses: chaosddp/upload_asset_to_release@v0.1
        with:
          repo: ServicebusBrowser
          owner: mligtenberg
          tag_name: ${{ github.event.inputs.tagVersion }}
          token: ${{ secrets.GITHUB_TOKEN }}
          asset: "dist/*.dmg"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
